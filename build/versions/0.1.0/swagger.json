{
  "swagger": "2.0",
  "host": "alpha-api-docs.dina-web.net",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "info": {
    "title": "Dina api",
    "contact": {
      "email": "oberg.anton@gmail.com"
    },
    "license": {
      "name": "GNU Affero General Public License",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "0.1.0",
    "description": "This is a first draft of dina api documentation. It can either be viewed as an\n[Open api spec](https://alpha-api-docs.dina-web.net/?url=https://alpha-api-docs.dina-web.net/openApi.json&docExpansion=false&defaultModelRendering=model&defaultModelExpandDepth=0)\nor as a\n[Swagger spec](https://alpha-api-docs.dina-web.net/?url=https://alpha-api-docs.dina-web.net/swagger.json&docExpansion=false&defaultModelRendering=model&defaultModelExpandDepth=0)\n\nDescriptions like below can be written in markdown:\n\n* [Dina web](https://alpha-cm.dina-web.net/login)\n* [Dina web with mocks](https://alpha-cm-mock.dina-web.net/login)\n* [Dina style guilde](https://alpha-style.dina-web.net)\n",
    "x-versionInfo": "# This is some version specific information\n"
  },
  "tags": [
    {
      "description": "Description of speciments api\n",
      "name": "catalogApi"
    },
    {
      "description": "Description of keycloak\n",
      "name": "keycloak"
    },
    {
      "description": "Description of slim taxonomy\n",
      "name": "slimTaxonomyApi"
    }
  ],
  "definitions": {
    "catalogedUnit": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "physicalUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/physicalUnit"
          }
        },
        "publishRecord": {
          "type": "boolean"
        },
        "remarks": {
          "type": "string",
          "example": "Some remarks"
        },
        "storedUnderTaxonName": {
          "$ref": "#/definitions/taxon"
        },
        "catalogNumber": {
          "type": "string",
          "example": "584028",
          "minLength": 6,
          "description": "Description for catalogNumber\n"
        }
      },
      "required": [
        "catalogNumber"
      ],
      "example": {
        "id": 1234,
        "storedUnderTaxonName": "mjau"
      },
      "x-category": "catalog",
      "x-modelType": "model"
    },
    "featureObservation": {
      "additionalProperties": false,
      "properties": {
        "featureObservationAgent": {
          "type": "string",
          "example": "Doe, J."
        },
        "featureObservationDate": {
          "type": "string",
          "example": "2017-12-12"
        },
        "featureObservationText": {
          "type": "string",
          "example": "10 years"
        },
        "featureObservationType": {
          "$ref": "#/definitions/featureObservationType"
        },
        "id": {
          "type": "string"
        },
        "methodText": {
          "type": "string",
          "example": "Known age"
        }
      },
      "x-category": "catalog",
      "x-modelType": "model"
    },
    "featureObservationType": {
      "additionalProperties": false,
      "properties": {
        "featureObservationTypeName": {
          "type": "string",
          "enum": [
            "sex",
            "length",
            "age",
            "weight",
            "conditionAtCollecting",
            "ageStage"
          ]
        },
        "id": {
          "type": "string",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ]
        }
      },
      "required": [
        "featureObservationTypeName"
      ],
      "x-category": "catalog",
      "x-modelType": "model"
    },
    "identification": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "identificationRemarks": {
          "type": "string",
          "example": "Some remarks"
        },
        "identificationText": {
          "type": "string",
          "example": "Sorex minutus, by Doe, J. on 1982-01-01"
        },
        "identifiedAsVerbatim": {
          "type": "string",
          "description": "In exactly the same words as were used originally"
        },
        "identifiedByAgentText": {
          "type": "string",
          "example": "Doe, J."
        },
        "identifiedDateText": {
          "type": "string",
          "example": "Before 1800"
        },
        "identifiedDay": {
          "type": "integer",
          "example": 25
        },
        "identifiedMonth": {
          "type": "integer",
          "example": 12
        },
        "identifiedTaxonNameStandardized": {
          "type": "string",
          "example": "Chironectes minimus"
        },
        "identifiedYear": {
          "type": "integer",
          "example": 1981
        },
        "isCurrentIdentification": {
          "type": "boolean",
          "example": true
        },
        "version": {
          "type": "integer"
        }
      },
      "x-category": "catalog",
      "x-modelType": "model"
    },
    "individualGroup": {
      "additionalProperties": false,
      "description": "# This is a description in a markdown file\n",
      "properties": {
        "causeOfDeathStandardized": {
          "type": "string"
        },
        "causeOfDeathText": {
          "type": "string"
        },
        "featureObservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/featureObservation"
          }
        },
        "id": {
          "type": "string"
        },
        "identifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/identification"
          }
        },
        "occurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/occurrence"
          }
        },
        "originStandardized": {
          "type": "string"
        },
        "physicalUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/physicalUnit"
          }
        },
        "versionInfo": {
          "$ref": "#/definitions/versionInfo"
        }
      },
      "x-category": "catalog",
      "x-modelType": "model"
    },
    "occurrence": {
      "additionalProperties": false,
      "properties": {
        "collectorsText": {
          "type": "string",
          "example": "Bergstr√∂m, U",
          "description": "Name of the collector"
        },
        "endDate": {
          "$ref": "#/definitions/date"
        },
        "establishmentMeansStandardized": {
          "type": "string"
        },
        "expeditionText": {
          "type": "string",
          "example": "Vega Expedition"
        },
        "id": {
          "type": "string"
        },
        "individualGroup": {
          "$ref": "#/definitions/individualGroup"
        },
        "isDeathEvent": {
          "type": "boolean"
        },
        "localityInformation": {
          "$ref": "#/definitions/localityInformation"
        },
        "startDate": {
          "$ref": "#/definitions/date"
        }
      },
      "x-category": "catalog",
      "x-modelType": "model"
    },
    "versionInfo": {
      "additionalProperties": false,
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string",
          "description": "Reference to agent/user"
        },
        "deactivatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deactivatedBy": {
          "type": "string",
          "description": "Reference to agent/user"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string",
          "description": "Reference to agent/user"
        },
        "versionId": {
          "type": "string"
        }
      },
      "x-category": "core",
      "x-modelType": "model"
    },
    "inventoryUnit": {
      "additionalProperties": false,
      "properties": {
        "normalStorageLocationText": {
          "type": "string"
        },
        "physicalUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/physicalUnit"
          }
        },
        "storage": {
          "type": "string",
          "description": "Storage reference"
        },
        "loan": {
          "type": "string",
          "description": "Loan reference"
        }
      },
      "x-category": "inventory",
      "x-modelType": "model"
    },
    "physicalUnit": {
      "additionalProperties": false,
      "properties": {
        "alternateIdentifiersText": {
          "type": "string",
          "example": "Skin complete, prepared"
        },
        "catalogedUnit": {
          "$ref": "#/definitions/catalogedUnit"
        },
        "id": {
          "type": "string"
        },
        "inventoryUnit": {
          "$ref": "#/definitions/inventoryUnit"
        },
        "physicalUnitText": {
          "type": "string",
          "example": "Skin complete, prepared"
        }
      },
      "x-category": "inventory",
      "x-modelType": "model"
    },
    "curatedLocality": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the locality"
        },
        "versionId": {
          "type": "string",
          "description": "Id of the specific version"
        },
        "versionInfo": {
          "$ref": "#/definitions/versionInfo"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier that is consistent over time"
        },
        "description": {
          "type": "string",
          "description": "Description of the locality"
        },
        "relations": {
          "type": "array",
          "description": "A relation to other curatedLocalities",
          "items": {
            "$ref": "#/definitions/curatedLocalityRelation"
          }
        },
        "type": {
          "type": "string",
          "description": "Type of locality",
          "enum": [
            "continent",
            "country",
            "district",
            "geodeticDatum",
            "locality",
            "province",
            "rubin"
          ]
        },
        "centralPosition": {
          "type": "object",
          "description": "A position describing the center",
          "$ref": "#/definitions/position"
        },
        "polygon": {
          "type": "object",
          "description": "A polygon describing the edges",
          "$ref": "#/definitions/polygon"
        },
        "verticalPosition": {
          "description": "A vertical position",
          "type": "object",
          "$ref": "#/definitions/verticalPosition"
        }
      },
      "x-required": [
        "name",
        "id",
        "description",
        "type"
      ],
      "description": "A curated locality is a ...\n",
      "x-category": "locality",
      "x-modelType": "model"
    },
    "curatedLocalityRelation": {
      "additionalProperties": false,
      "properties": {
        "target": {
          "type": "object",
          "$ref": "#/definitions/curatedLocality"
        },
        "type": {
          "type": "string",
          "enum": [
            "inside",
            "overlap",
            "border"
          ]
        }
      },
      "x-category": "locality",
      "x-modelType": "model"
    },
    "localityInformation": {
      "additionalProperties": false,
      "properties": {
        "curatedLocalities": {
          "description": "An array with curated localities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/curatedLocality"
          }
        },
        "position": {
          "description": "A specific position",
          "type": "object",
          "$ref": "#/definitions/position"
        },
        "polygon": {
          "description": "A specific position",
          "type": "object",
          "$ref": "#/definitions/polygon"
        },
        "verticalPosition": {
          "description": "A vertical position",
          "type": "object",
          "$ref": "#/definitions/verticalPosition"
        },
        "coordinatesVerbatim": {
          "type": "string",
          "description": "Verbatim coordinates (or corresponding information, e.g. map number) from the original source"
        },
        "georeferenceSourcesText": {
          "type": "string",
          "description": "Describe how you got the georeferenced coordinates (data source(s), tools, maps ...)"
        },
        "localityText": {
          "type": "string",
          "description": "TBA"
        },
        "localityRemarks": {
          "type": "string",
          "description": "Notes on the locality"
        },
        "localityVerbatim": {
          "type": "string",
          "description": "Verbatim locality names and description, as in the original source, typos and all."
        }
      },
      "description": "# localityInformation\n\nContains information related to where an occurrence happened. \n",
      "x-category": "locality",
      "x-modelType": "model"
    },
    "polygon": {
      "additionalProperties": false,
      "description": "A polygon with longitude, latitude vertices",
      "properties": {
        "vertices": {
          "type": "array",
          "description": "Corners of the polygon in sane format"
        }
      },
      "x-category": "locality",
      "x-modelType": "model"
    },
    "position": {
      "additionalProperties": false,
      "description": "A position represent a specific position",
      "properties": {
        "latitude": {
          "type": "string",
          "description": "Latitude or northing. Use negative number or letter S for coordinates on southern hemisphere."
        },
        "longitude": {
          "type": "string",
          "description": "Latitude or easting. Use negative number or letter W for coordinates on western hemisphere."
        },
        "geodeticDatum": {
          "type": "string",
          "description": "Geodetic datum wip"
        },
        "uncertaintyInMeters": {
          "type": "integer",
          "description": "Coordinate uncertainty in meters"
        }
      },
      "x-required": [
        "name",
        "id",
        "description",
        "type"
      ],
      "x-category": "locality",
      "x-modelType": "model"
    },
    "verticalPosition": {
      "additionalProperties": false,
      "description": "A description of vertical position",
      "properties": {
        "maximumDepthInMeters": {
          "type": "integer",
          "description": "Max depth (m)"
        },
        "maximumElevationInMeters": {
          "type": "integer",
          "description": "Max elevation (m)"
        },
        "minimumDepthInMeters": {
          "type": "integer",
          "description": "Min depth (m)"
        },
        "minimumElevationInMeters": {
          "type": "integer",
          "description": "Min elevation (m)"
        }
      },
      "x-required": [
        "name",
        "id",
        "description",
        "type"
      ],
      "x-category": "locality",
      "x-modelType": "model"
    },
    "taxon": {
      "additionalProperties": false,
      "properties": {
        "parent": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Parent taxon identifier"
            },
            "scientific_name": {
              "type": "string",
              "description": "Parent taxon scientific name"
            },
            "rank": {
              "type": "string",
              "description": "Parent taxon rank"
            }
          },
          "required": [
            "id",
            "scientific_name",
            "rank"
          ]
        },
        "rubin_number": {
          "type": "string",
          "description": "Rubin storage number for the taxon"
        },
        "higherTaxa": {
          "type": "object",
          "properties": {
            "order": {
              "type": "string",
              "description": "Parent order"
            },
            "suborder": {
              "type": "string",
              "description": "Parent suborder"
            },
            "infraorder": {
              "type": "string",
              "description": "Parent infraorder"
            },
            "superfamily": {
              "type": "string",
              "description": "Parent superfamily"
            },
            "family": {
              "type": "string",
              "description": "Parent family"
            },
            "subfamily": {
              "type": "string",
              "description": "Parent subfamily"
            },
            "tribe": {
              "type": "string",
              "description": "Parent tribe"
            },
            "genus": {
              "type": "string",
              "description": "Parent genus"
            },
            "subgenus": {
              "type": "string",
              "description": "Parent subgenus"
            }
          }
        },
        "rank": {
          "type": "string",
          "description": "Taxon rank"
        },
        "scientific_name": {
          "type": "string",
          "description": "Taxon scientific name, binomial if species"
        },
        "author": {
          "type": "string",
          "description": "Taxon author without the year"
        },
        "author_date": {
          "type": "string",
          "description": "Taxon author year"
        },
        "valid_name": {
          "type": "boolean",
          "description": "Is the name taxonomically valid",
          "default": false
        },
        "vernacular_names": {
          "type": "object",
          "properties": {
            "en": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Vernacular (common) English names for the taxon"
              }
            }
          }
        },
        "synonyms": {
          "type": "string",
          "description": "List of synonyms as free-form text"
        },
        "sort_order": {
          "type": "string",
          "description": "Taxonomical sort order code from Mammal Species of the World list"
        }
      },
      "required": [
        "rank",
        "scientific_name",
        "valid_name"
      ],
      "x-category": "taxonomy",
      "x-modelType": "model"
    },
    "date": {
      "additionalProperties": false,
      "properties": {
        "dateText": {
          "type": "integer",
          "example": "Before 1800"
        },
        "day": {
          "type": "integer",
          "example": 30
        },
        "isoDate": {
          "type": "integer",
          "example": 30
        },
        "month": {
          "type": "integer",
          "example": 30
        },
        "year": {
          "type": "integer",
          "example": 30
        }
      },
      "x-category": "time",
      "x-modelType": "model"
    },
    "batchItem": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "description": "Should have a one of condition"
        },
        "model": {
          "type": "string"
        },
        "schemaVersion": {
          "type": "string"
        },
        "uploaded": {
          "type": "boolean"
        },
        "isValid": {
          "type": "boolean"
        }
      },
      "x-category": "upload",
      "x-modelType": "model"
    },
    "batchUpload": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/batchItem"
          }
        },
        "jobUpload": {
          "type": "boolean"
        },
        "uploadStarted": {
          "type": "boolean"
        },
        "uploadCompleted": {
          "type": "boolean"
        },
        "userId": {
          "type": "boolean"
        },
        "nUploadedItems": {
          "type": "integer"
        },
        "nValidItems": {
          "type": "integer"
        },
        "nItems": {
          "type": "integer"
        }
      },
      "x-category": "upload",
      "x-modelType": "model"
    },
    "createBatchUploadRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchUpload"
            },
            "attributes": {
              "$ref": "#/definitions/batchUpload"
            }
          }
        }
      }
    },
    "updateBatchUploadItemRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchItem"
            },
            "attributes": {
              "$ref": "#/definitions/batchItem"
            }
          }
        }
      }
    },
    "createIndividualGroupRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "individualGroup"
            },
            "attributes": {
              "$ref": "#/definitions/individualGroup"
            }
          }
        }
      }
    },
    "createInventoryUnitRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "inventoryUnit"
            },
            "attributes": {
              "$ref": "#/definitions/inventoryUnit"
            }
          }
        }
      }
    },
    "createPhysicalUnitRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "physicalUnit"
            },
            "attributes": {
              "$ref": "#/definitions/physicalUnit"
            }
          }
        }
      }
    },
    "updateInventoryUnitRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "physicalUnit"
            },
            "attributes": {
              "$ref": "#/definitions/physicalUnit"
            }
          }
        }
      }
    },
    "updatePhysicalUnitRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "physicalUnit"
            },
            "attributes": {
              "$ref": "#/definitions/physicalUnit"
            }
          }
        }
      }
    },
    "loginUserRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "client_id": {
          "type": "string",
          "example": "dina-reset"
        },
        "grant_type": {
          "type": "string",
          "example": "password"
        },
        "password": {
          "type": "string",
          "example": "xxxxx"
        },
        "username": {
          "type": "string",
          "example": "john doe"
        }
      },
      "required": [
        "client_id",
        "grant_type",
        "password",
        "username"
      ]
    },
    "createCuratedLocalityRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "curatedLocality",
              "default": "curatedLocality"
            },
            "attributes": {
              "$ref": "#/definitions/curatedLocality"
            }
          }
        }
      }
    },
    "updateCuratedLocalityRequest": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "curatedLocality",
              "default": "curatedLocality"
            },
            "attributes": {
              "$ref": "#/definitions/curatedLocality"
            }
          }
        }
      }
    },
    "createBatchUploadResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "batchUpload"
            },
            "attributes": {
              "$ref": "#/definitions/batchUpload"
            }
          }
        }
      }
    },
    "deleteBatchUploadItemResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchItem"
            },
            "attributes": {
              "$ref": "#/definitions/batchItem"
            }
          }
        }
      }
    },
    "getBatchUploadResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchUpload"
            },
            "attributes": {
              "$ref": "#/definitions/batchUpload"
            }
          }
        }
      }
    },
    "getBatchUploadItemResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchItem"
            },
            "attributes": {
              "$ref": "#/definitions/batchItem"
            }
          }
        }
      }
    },
    "getBatchUploadItemsResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "batchItem"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/batchItem"
              }
            }
          }
        }
      }
    },
    "getBatchUploadsResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "batchUpload"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/batchUpload"
              }
            }
          }
        }
      }
    },
    "saveBatchUploadResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchUpload"
            },
            "attributes": {
              "$ref": "#/definitions/batchUpload"
            }
          }
        }
      }
    },
    "updateBatchUploadItemResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "batchItem"
            },
            "attributes": {
              "$ref": "#/definitions/batchItem"
            }
          }
        }
      }
    },
    "createIndividualGroupResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "individualGroup"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/individualGroup"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "versions": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://domain/catalogApi/v01/individualGroups/{id}/versions"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/catalogApi/v01/individualGroups/{id}"
            }
          }
        }
      }
    },
    "getIndividualGroupResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "default": "individualGroup"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/individualGroup"
              },
              "relationships": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "included": {
          "type": "array",
          "example": [
            {
              "attributes": {},
              "id": "1234",
              "type": "physicalUnit"
            },
            {
              "attributes": {},
              "id": "1234",
              "type": "curatedLocality"
            }
          ],
          "items": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "default": "physicalUnit",
                    "example": "physicalUnit"
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "$ref": "#/definitions/physicalUnit"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "default": "curatedLocality",
                    "example": "curatedLocality"
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "$ref": "#/definitions/curatedLocality"
                  }
                }
              }
            ]
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/catalogApi/v01/individualGroups"
            }
          }
        }
      }
    },
    "createInventoryUnitResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "inventoryUnit"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/inventoryUnit"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "physicalUnits": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://domain/api/v01/inventoryUnits/{id}/physicalUnits"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/inventoryUnits/{id}"
            }
          }
        }
      }
    },
    "createPhysicalUnitResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "physicalUnit"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/physicalUnit"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "inventoryUnit": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://domain/api/v01/inventoryUnits/{id}"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/physicalUnits/{id}"
            }
          }
        }
      }
    },
    "deletePhysicalUnitResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "physicalUnit"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/physicalUnit"
            },
            "relationships": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "getInventoryUnitResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "inventoryUnit"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/inventoryUnit"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "physicalUnits": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://domain/api/v01/inventoryUnits/{id}/physicalUnits"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/inventoryUnits/{id}"
            }
          }
        }
      }
    },
    "getInventoryUnitPhysicalUnitsResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "default": "physicalUnit"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/physicalUnit"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inventoryUnit": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://domain/api/v01/inventoryUnits/{id}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/inventoryUnits/{id}/physicalUnits"
            }
          }
        }
      }
    },
    "getInventoryUnitsResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "default": "inventoryUnit"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/inventoryUnit"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "physicalUnits": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://domain/api/v01/inventoryUnits/{id}/physicalUnits"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getPhysicalUnitsResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "default": "physicalUnit"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/physicalUnit"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inventoryUnit": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://domain/api/v01/inventoryUnits/{id}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/physicalUnits"
            }
          }
        }
      }
    },
    "updateInventoryUnitResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "inventoryUnit"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/inventoryUnit"
            },
            "relationships": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/inventoryUnits/{id}"
            }
          }
        }
      }
    },
    "updatePhysicalUnitResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "physicalUnit"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/physicalUnit"
            },
            "relationships": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri",
              "example": "https://domain/api/v01/physicalUnits/{id}"
            }
          }
        }
      }
    },
    "getUserResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "family_name": {
          "type": "string",
          "example": "Doe"
        },
        "given_name": {
          "type": "string",
          "example": "John"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "preferred_username": {
          "type": "string",
          "example": "john doe"
        },
        "sub": {
          "type": "string",
          "example": "xxxx"
        }
      },
      "required": [
        "email",
        "preferred_username"
      ]
    },
    "loginUserResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "access_token": {
          "type": "string",
          "example": "xxxx"
        },
        "expires_in": {
          "type": "integer",
          "example": 300
        },
        "not-before-policy": {
          "type": "integer",
          "example": 0
        },
        "refresh_expires_in": {
          "type": "integer",
          "example": 1800
        },
        "refresh_token": {
          "type": "string",
          "example": "xxxx"
        },
        "session_state": {
          "type": "string",
          "example": "bearer"
        },
        "token_type": {
          "type": "string",
          "example": "xxxx"
        }
      },
      "required": [
        "access_token"
      ]
    },
    "createCuratedLocalityResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "versionId": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "curatedLocality"
            },
            "attributes": {
              "$ref": "#/definitions/curatedLocality"
            }
          }
        }
      }
    },
    "getCuratedLocalityResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "default": "curatedLocality"
            },
            "id": {
              "type": "string",
              "example": "1234"
            },
            "attributes": {
              "$ref": "#/definitions/curatedLocality"
            },
            "relationships": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "updateCuratedLocalityResponse": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "data": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "versionId": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "curatedLocality"
            },
            "attributes": {
              "$ref": "#/definitions/curatedLocality"
            }
          }
        }
      }
    },
    "getTaxaByNameResponse": {
      "additionalProperties": true,
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "taxon",
                "example": "taxon"
              },
              "id": {
                "type": "string",
                "example": "1234"
              },
              "attributes": {
                "$ref": "#/definitions/taxon"
              }
            }
          }
        }
      }
    },
    "getTaxonByIdResponse": {
      "additionalProperties": true,
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1234"
            },
            "type": {
              "type": "string",
              "default": "taxon"
            },
            "attributes": {
              "$ref": "#/definitions/taxon"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/v01/batchUploads": {
      "post": {
        "operationId": "createBatchUpload",
        "parameters": [
          {
            "in": "body",
            "name": "createBatchUploadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createBatchUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/createBatchUploadResponse"
            }
          }
        },
        "summary": "Create a batch upload",
        "tags": [
          "batchUploadApi"
        ]
      },
      "get": {
        "operationId": "getBatchUploads",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getBatchUploadsResponse"
            }
          }
        },
        "summary": "Get batchUploads",
        "tags": [
          "batchUploadApi"
        ]
      }
    },
    "/api/v01/batchUploads/{id}/items/{itemId}": {
      "delete": {
        "operationId": "deleteBatchUploadItem",
        "parameters": [
          {
            "description": "Batch upload id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Batch upload item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteBatchUploadItemResponse"
            }
          }
        },
        "summary": "Delete a batch upload item",
        "tags": [
          "batchUploadApi"
        ]
      },
      "get": {
        "operationId": "getBatchUploadItem",
        "parameters": [
          {
            "description": "Batch upload id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Batch upload item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getBatchUploadItemResponse"
            }
          }
        },
        "summary": "Get a batch update item by itemId",
        "tags": [
          "batchUploadApi"
        ]
      },
      "put": {
        "operationId": "updateBatchUploadItem",
        "parameters": [
          {
            "in": "body",
            "name": "updateBatchUploadItemRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateBatchUploadItemRequest"
            }
          },
          {
            "description": "Batch upload id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Batch upload item id",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/updateBatchUploadItemResponse"
            }
          }
        },
        "summary": "Get a batch update by id",
        "tags": [
          "batchUploadApi"
        ]
      }
    },
    "/api/v01/batchUploads/{id}": {
      "get": {
        "operationId": "getBatchUpload",
        "parameters": [
          {
            "description": "Batch upload id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getBatchUploadResponse"
            }
          }
        },
        "summary": "Get a batch update by id",
        "tags": [
          "batchUploadApi"
        ]
      }
    },
    "/api/v01/batchUploads/{id}/items": {
      "get": {
        "operationId": "getBatchUploadItems",
        "parameters": [
          {
            "description": "Batch upload id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getBatchUploadItemsResponse"
            }
          }
        },
        "summary": "Get batchUpload items",
        "tags": [
          "batchUploadApi"
        ]
      }
    },
    "/api/v01/batchUploads/actions/save": {
      "post": {
        "operationId": "saveBatchUpload",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/saveBatchUploadResponse"
            }
          }
        },
        "summary": "Save a batch upload",
        "tags": [
          "batchUploadApi"
        ]
      }
    },
    "/catalogApi/v01/individualGroups": {
      "post": {
        "description": "This endpoint is for the moment used to register mammals in the mammal\nregistration form\n",
        "parameters": [
          {
            "in": "body",
            "name": "createIndividualGroupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createIndividualGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/createIndividualGroupResponse"
            }
          }
        },
        "summary": "Create an individual group and a catalogUnit if not existing",
        "tags": [
          "catalogApi"
        ]
      },
      "get": {
        "description": "Makes it possible to fetch an individualGroup based on\ncatalogedUnit.catalogNumber OR identification.identifiedTaxonNameStandardized\n\nMore information to come\n",
        "parameters": [
          {
            "description": "catalog number used to filter individualGroups",
            "in": "query",
            "name": "filter[catalogNumber]",
            "required": false,
            "type": "string"
          },
          {
            "description": "Standardized taxon name used to filter individualGroups",
            "in": "query",
            "name": "filter[identifiedTaxonNameStandardized]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getIndividualGroupResponse"
            }
          }
        },
        "summary": "Finds individualGroups",
        "tags": [
          "catalogApi"
        ]
      }
    },
    "/catalogApi/v01/individualGroups/{id}": {
      "get": {
        "parameters": [
          {
            "description": "individualGroup id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getIndividualGroupResponse"
            }
          }
        },
        "summary": "Get a individualGroup by id",
        "tags": [
          "catalogApi"
        ]
      },
      "patch": {
        "description": "This endpoint is for the moment used to edit mammals in the mammal specimen form\n",
        "parameters": [
          {
            "in": "body",
            "name": "createIndividualGroupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createIndividualGroupRequest"
            }
          },
          {
            "description": "Individual group id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/createIndividualGroupResponse"
            }
          }
        },
        "summary": "Update an individual group by id",
        "tags": [
          "catalogApi"
        ]
      }
    },
    "/api/v01/inventoryUnits": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "createInventoryUnitRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createInventoryUnitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/createInventoryUnitResponse"
            }
          }
        },
        "summary": "Create an inventoryUnit",
        "tags": [
          "inventoryApi"
        ]
      },
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getInventoryUnitsResponse"
            }
          }
        },
        "summary": "Get inventoryUnits",
        "tags": [
          "inventoryApi"
        ]
      }
    },
    "/api/v01/physicalUnits": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "createPhysicalUnitRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createPhysicalUnitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/createPhysicalUnitResponse"
            }
          }
        },
        "summary": "Create a physicalUnit",
        "tags": [
          "inventoryApi"
        ]
      },
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getPhysicalUnitsResponse"
            }
          }
        },
        "summary": "Get a physicalUnits",
        "tags": [
          "inventoryApi"
        ]
      }
    },
    "/api/v01/inventoryUnits/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "inventoryUnit id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deletePhysicalUnitResponse"
            }
          }
        },
        "summary": "Delete an inventory unit",
        "tags": [
          "inventoryApi"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "inventoryUnit id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getInventoryUnitResponse"
            }
          }
        },
        "summary": "Get a inventoryUnit by id",
        "tags": [
          "inventoryApi"
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "body",
            "name": "updateInventoryUnitRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateInventoryUnitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/updateInventoryUnitResponse"
            }
          }
        },
        "summary": "Update an inventoryUnits",
        "tags": [
          "inventoryApi"
        ]
      }
    },
    "/api/v01/physicalUnits/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "physicalUnits id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deletePhysicalUnitResponse"
            }
          }
        },
        "summary": "Delete a physical unit",
        "tags": [
          "inventoryApi"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "physicalUnits id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getPhysicalUnitsResponse"
            }
          }
        },
        "summary": "Get a physicalUnits by id",
        "tags": [
          "inventoryApi"
        ]
      },
      "put": {
        "parameters": [
          {
            "in": "body",
            "name": "updatePhysicalUnitRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePhysicalUnitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/updatePhysicalUnitResponse"
            }
          }
        },
        "summary": "Update a physicalUnit",
        "tags": [
          "inventoryApi"
        ]
      }
    },
    "/api/v01/inventoryUnits/{id}/physicalUnits": {
      "get": {
        "parameters": [
          {
            "description": "inventoryUnit id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getInventoryUnitPhysicalUnitsResponse"
            }
          }
        },
        "summary": "Gets all physicalUnits associated with an inventoryUnit",
        "tags": [
          "inventoryApi"
        ]
      }
    },
    "/auth/realms/dina/protocol/openid-connect/userInfo": {
      "get": {
        "operationId": "getUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getUserResponse"
            }
          }
        },
        "summary": "Gets user object",
        "tags": [
          "keycloakApi"
        ]
      }
    },
    "/auth/realms/dina/protocol/openid-connect/token": {
      "post": {
        "operationId": "loginUser",
        "parameters": [
          {
            "in": "body",
            "name": "loginUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/loginUserResponse"
            }
          }
        },
        "summary": "Gets user token",
        "tags": [
          "keycloakApi"
        ]
      }
    },
    "/collections/api/v01/curatedLocality": {
      "post": {
        "description": "Create a curatedLocality\n",
        "operationId": "createCuratedLocality",
        "parameters": [
          {
            "in": "body",
            "name": "createCuratedLocalityRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCuratedLocalityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/createCuratedLocalityResponse"
            }
          }
        },
        "summary": "Create a curatedLocality",
        "tags": [
          "localityApi"
        ]
      }
    },
    "/collections/api/v01/curatedLocality/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Curated locality id\"",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getCuratedLocalityResponse"
            }
          }
        },
        "summary": "Find latest version of a curatedLocality",
        "tags": [
          "localityApi"
        ]
      },
      "put": {
        "operationId": "updateCuratedLocality",
        "parameters": [
          {
            "in": "body",
            "name": "updateCuratedLocalityRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCuratedLocalityRequest"
            }
          },
          {
            "description": "curatedLocality id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/updateCuratedLocalityResponse"
            }
          }
        },
        "summary": "Update an curatedLocality id",
        "tags": [
          "localityApi"
        ]
      }
    },
    "/collections/api/v01/curatedLocality/{id}/versions/{versionId}": {
      "get": {
        "parameters": [
          {
            "description": "Curated locality id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Curated locality versionId",
            "in": "path",
            "name": "versionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getCuratedLocalityResponse"
            }
          }
        },
        "summary": "Find a specific version of a curatedLocality",
        "tags": [
          "localityApi"
        ]
      }
    },
    "/taxon": {
      "get": {
        "description": "Fetches a taxon or several taxa.\n",
        "operationId": "getTaxaByName",
        "parameters": [
          {
            "description": "Taxon name - accepted scientific, synonym or vernacular name",
            "in": "query",
            "name": "filter[name]",
            "required": true,
            "type": "string"
          },
          {
            "description": "Search type - exact (default) or partial",
            "in": "query",
            "name": "search_type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getTaxaByNameResponse"
            }
          }
        },
        "summary": "Fetches taxa by name",
        "tags": [
          "slimTaxonomyApi"
        ]
      }
    },
    "/taxon/{id}": {
      "get": {
        "description": "Fetches a taxon by id.\n",
        "operationId": "getTaxonById",
        "parameters": [
          {
            "description": "Taxon id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getTaxonByIdResponse"
            }
          }
        },
        "summary": "Fetches taxon by id",
        "tags": [
          "slimTaxonomyApi"
        ]
      }
    }
  }
}